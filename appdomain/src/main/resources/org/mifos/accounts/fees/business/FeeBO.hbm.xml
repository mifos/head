<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd" >
<hibernate-mapping>
    <class name="org.mifos.accounts.fees.business.FeeBO" table="fees">
        <id name="feeId" column="fee_id" type="short" unsaved-value="null" access="field">
            <generator class="native" />
        </id>
        <discriminator>
            <column name="discriminator" />
        </discriminator>
        <version name="versionNo" column="version_no" type="integer" unsaved-value="null" />

        <property name="createdDate" column="created_date" />
        <property name="createdBy" column="created_by" />
        <property name="updatedDate" column="updated_date" />
        <property name="updatedBy" column="updated_by" />
        <property name="feeName" column="fee_name" access="field" />
        <property name="changeType" column="update_flag" access="field" />

        <many-to-one name="office" column="office_id" class="org.mifos.customers.office.business.OfficeBO" insert="true" update="false" access="field" />
        <many-to-one name="categoryType" column="category_id" class="org.mifos.accounts.fees.business.CategoryTypeEntity" update="false" insert="true" access="field" />
        <many-to-one name="glCode" column="glcode_id" class="org.mifos.accounts.financial.business.GLCodeEntity" insert="true" update="false" access="field" />
        <one-to-one name="feeFrequency" class="org.mifos.accounts.fees.business.FeeFrequencyEntity" cascade="all" property-ref="fee" lazy="false" access="field" />
        <many-to-one name="feeStatus" column="status" class="org.mifos.accounts.fees.business.FeeStatusEntity" insert="true" update="true" />
        <set name="feeLevels" cascade="all" inverse="true" table="feelevel" access="field">
            <key column="fee_id" not-null="false" />
            <one-to-many class="org.mifos.accounts.fees.business.FeeLevelEntity" />
        </set>

        <subclass name="org.mifos.accounts.fees.business.RateFeeBO" discriminator-value="RATE">
            <property name="rate" column="rate" />
            <many-to-one name="feeFormula" column="formula_id" class="org.mifos.accounts.fees.business.FeeFormulaEntity"  lazy="false" insert="true" update="false" access="field" />
        </subclass>

        <subclass name="org.mifos.accounts.fees.business.AmountFeeBO" discriminator-value="AMOUNT">
            <property name="feeAmount" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
                <column name="fee_amount_currency_id" />
                <column name="fee_amount" />
            </property>
        </subclass>
    </class>
    <query name="retrieveCustomerFees">
        <![CDATA[from FeeBO fee where fee.categoryType.id in (1,2,3,4) order by fee.feeName]]>
    </query>

    <query name="retrieveProductFees">
        <![CDATA[from FeeBO fee where fee.categoryType.id in (5) order by fee.feeName]]>
    </query>

    <query name="retrieveUpdatedFeesApplicableToCustomers">
        <![CDATA[select fee.feeId from FeeBO fee where fee.changeType in (1,2,3) and fee.categoryType.id in (1,2,3,4)]]>
    </query>

    <query name="findFeeById">
        <![CDATA[from FeeBO fee where fee.feeId=:feeId]]>
    </query>

    <query name="retrieveCustomerFeesByCategoryType">
        <![CDATA[from FeeBO fee where fee.feeStatus=1 and (fee.categoryType.id=:ALLCUSTOMERS or fee.categoryType.id=:CUSTOMER_CATEGAORY) order by fee.feeName]]>
    </query>
    <query name="getAllApplicableFeesForCustomer">
        <![CDATA[from FeeBO as fees where fees.feeStatus.id=:active and fees.categoryType.id in (:category1,:category2)
        and fees.feeId not in ( select af.fees.feeId from org.mifos.accounts.business.AccountFeesEntity af
        where af.account.accountId=:accountId and af.fees.feeFrequency.feeFrequencyType.id=:feeFrequencyTypeId and (af.feeStatus=null or af.feeStatus=:active))
        ]]>
    </query>
    <query name="getAllApplicableFeesForLoan">
        <![CDATA[from FeeBO as fees where fees.feeStatus.id=:active and fees.categoryType.id in (:category)
        and fees.feeId not in ( select af.fees.feeId from org.mifos.accounts.business.AccountFeesEntity af
        where af.account.accountId=:accountId and (af.feeStatus=null or af.feeStatus=:active))
        ]]>
    </query>
    <query name="getAllApplicableFeesForLoanCreation">
        <![CDATA[from FeeBO as fees where fees.feeStatus.id=:active and fees.categoryType.id =:category]]>
    </query>
    
    <query name="findRateFeeById">
    	<![CDATA[
    		from org.mifos.accounts.fees.business.RateFeeBO rateFee where rateFee.feeId=:feeId
		]]>
    </query>
    
    <sql-query name="findFeeAppliedToLoan">
    	<return-scalar column="fee_id" type="short"/>
    	<![CDATA[select fee_id from prd_offering_fees where fee_id=:FEEID]]>
    </sql-query>
   	<sql-query name="getAllUsedLoansWithAttachedFee">
   	<return-scalar column="fee_id" type="short"/>
   		<![CDATA[select distinct fee_id from account_fees]]>
   	</sql-query>
   	<sql-query name="findFeeInSchedule">
   		<![CDATA[select fee_id from original_loan_fee_schedule where fee_id=:FEEID]]>
   	</sql-query>

</hibernate-mapping>
