<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

    <!--
        ========= Import declarations: =========
    -->

    <bean id="integrationDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${integration.database.driver}" />
        <property name="url"
            value="jdbc:mysql://${integration.database.host}:${integration.database.port}/${integration.database}?${integration.database.params.spring}" />
        <property name="username" value="${integration.database.user}" />
        <property name="password" value="${integration.database.password}" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="integrationDataSource" />
    </bean>

    <!--
        ========= Batch jobs configurations: =========
    -->

    <!--
                ProductStatus:
    -->
    <bean name="ProductStatus" parent="jobDetailBase" class="org.springframework.scheduling.quartz.JobDetailBean">
      <property name="jobClass" value="org.mifos.framework.components.batchjobs.helpers.ProductStatus" />
      <property name="name" value="ProductStatusJob" />
    </bean>
    <bean id="ProductStatusTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="ProductStatus" />
        <property name="cronExpression" value="0 0 0 * * ?" />
    </bean>
    <batch:job id="ProductStatusJob" parent="jobBase" job-repository="jobRepository">
        <batch:step id="ProductStatus-step-1">
            <batch:tasklet ref="ProductStatusTasklet" />
        </batch:step>
    </batch:job>
    <bean name="ProductStatusTasklet" class="org.mifos.framework.components.batchjobs.helpers.ProductStatusHelper" />

    <!--
                SavingsIntPostingTask:
    -->
    <bean name="SavingsIntPostingTask" parent="jobDetailBase" class="org.springframework.scheduling.quartz.JobDetailBean">
      <property name="jobClass" value="org.mifos.framework.components.batchjobs.helpers.SavingsIntPostingTask" />
      <property name="name" value="SavingsIntPostingTaskJob" />
    </bean>
    <bean id="SavingsIntPostingTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="SavingsIntPostingTask" />
        <property name="cronExpression" value="0 0 0 * * ?" />
    </bean>
    <batch:job id="SavingsIntPostingTaskJob" parent="jobBase" job-repository="jobRepository">
        <batch:step id="SavingsIntPostingTask-step-1">
            <batch:tasklet ref="SavingsIntPostingTaskTasklet" />
        </batch:step>
    </batch:job>
    <bean name="SavingsIntPostingTaskTasklet" class="org.mifos.framework.components.batchjobs.helpers.SavingsIntPostingHelper" />

    <!--
                ApplyCustomerFeeChangesTask:
    -->
    <bean name="ApplyCustomerFeeChangesTask" parent="jobDetailBase" class="org.springframework.scheduling.quartz.JobDetailBean">
      <property name="jobClass" value="org.mifos.framework.components.batchjobs.helpers.ApplyCustomerFeeChangesTask" />
      <property name="name" value="ApplyCustomerFeeChangesTaskJob" />
    </bean>
    <bean id="ApplyCustomerFeeChangesTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="ApplyCustomerFeeChangesTask" />
        <property name="cronExpression" value="0 0 0 * * ?" />
    </bean>
    <batch:job id="ApplyCustomerFeeChangesTaskJob" parent="jobBase" job-repository="jobRepository">
        <batch:step id="ApplyCustomerFeeChangesTask-step-1">
            <batch:tasklet ref="ApplyCustomerFeeChangesTaskTasklet" />
        </batch:step>
    </batch:job>
    <bean name="ApplyCustomerFeeChangesTaskTasklet" class="org.mifos.framework.components.batchjobs.helpers.ApplyCustomerFeeChangesHelper" />

    <!--
                LoanArrearsAgingTask:
    -->
    <bean name="LoanArrearsAgingTask" parent="jobDetailBase" class="org.springframework.scheduling.quartz.JobDetailBean">
      <property name="jobClass" value="org.mifos.framework.components.batchjobs.helpers.LoanArrearsAgingTask" />
      <property name="name" value="LoanArrearsAgingTaskJob" />
    </bean>
    <bean id="LoanArrearsAgingTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="LoanArrearsAgingTask" />
        <property name="cronExpression" value="0 0 0 * * ?" />
    </bean>
    <batch:job id="LoanArrearsAgingTaskJob" parent="jobBase" job-repository="jobRepository">
        <batch:step id="LoanArrearsAgingTask-step-1">
            <batch:tasklet ref="LoanArrearsAgingTaskTasklet" />
        </batch:step>
    </batch:job>
    <bean name="LoanArrearsAgingTaskTasklet" class="org.mifos.framework.components.batchjobs.helpers.LoanArrearsAgingHelper" />

    <!--
                ApplyHolidayChangesTask
    -->
    <bean name="ApplyHolidayChangesTask" parent="jobDetailBase" class="org.springframework.scheduling.quartz.JobDetailBean">
      <property name="jobClass" value="org.mifos.framework.components.batchjobs.helpers.ApplyHolidayChangesTask" />
      <property name="name" value="ApplyHolidayChangesTaskJob" />
    </bean>
    <bean id="ApplyHolidayChangesTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="ApplyHolidayChangesTask" />
        <property name="cronExpression" value="0 0 0 * * ?" />
    </bean>
    <batch:job id="ApplyHolidayChangesTaskJob" parent="jobBase" job-repository="jobRepository">
        <batch:step id="ApplyHolidayChangesTask-step-1">
            <batch:tasklet ref="ApplyHolidayChangesTaskTasklet" />
        </batch:step>
    </batch:job>
    <bean name="ApplyHolidayChangesTaskTasklet" class="org.mifos.framework.components.batchjobs.helpers.ApplyHolidayChangesHelper" />

    <!--
                LoanArrearsAndPortfolioAtRiskTask:
    -->
    <bean name="LoanArrearsAndPortfolioAtRiskTask" parent="jobDetailBase" class="org.springframework.scheduling.quartz.JobDetailBean">
      <property name="jobClass" value="org.mifos.framework.components.batchjobs.helpers.PortfolioAtRiskTask" />
      <property name="name" value="LoanArrearsAndPortfolioAtRiskTaskJob" />
    </bean>
    <bean id="LoanArrearsAndPortfolioAtRiskTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="LoanArrearsAndPortfolioAtRiskTask" />
        <property name="cronExpression" value="0 0 0 * * ?" />
    </bean>
    <batch:job id="LoanArrearsAndPortfolioAtRiskTaskJob" parent="jobBase" job-repository="jobRepository">
        <batch:step id="LoanArrearsAndPortfolioAtRiskTask-step-1" next="LoanArrearsAndPortfolioAtRiskTask-step-2">
            <batch:tasklet ref="LoanArrearsTaskTasklet" />
        </batch:step>
        <batch:step id="LoanArrearsAndPortfolioAtRiskTask-step-2">
            <batch:tasklet ref="PortfolioAtRiskTaskTasklet" />
        </batch:step>
    </batch:job>
    <bean name="LoanArrearsTaskTasklet" class="org.mifos.framework.components.batchjobs.helpers.LoanArrearsHelper" />
    <bean name="PortfolioAtRiskTaskTasklet" class="org.mifos.framework.components.batchjobs.helpers.PortfolioAtRiskHelper" />

    <!--
                GenerateMeetingsForCustomerAndSavingsTask:
    -->
    <bean name="GenerateMeetingsForCustomerAndSavingsTask" parent="jobDetailBase" class="org.springframework.scheduling.quartz.JobDetailBean">
      <property name="jobClass" value="org.mifos.framework.components.batchjobs.helpers.GenerateMeetingsForCustomerAndSavingsTask" />
      <property name="name" value="GenerateMeetingsForCustomerAndSavingsTaskJob" />
    </bean>
    <bean id="GenerateMeetingsForCustomerAndSavingsTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="GenerateMeetingsForCustomerAndSavingsTask" />
        <property name="cronExpression" value="0 0 0 * * ?" />
    </bean>
    <batch:job id="GenerateMeetingsForCustomerAndSavingsTaskJob" parent="jobBase" job-repository="jobRepository">
        <batch:step id="GenerateMeetingsForCustomerAndSavingsTask-step-1">
            <batch:tasklet ref="GenerateMeetingsForCustomerAndSavingsTaskTasklet" />
        </batch:step>
    </batch:job>
    <bean name="GenerateMeetingsForCustomerAndSavingsTaskTasklet" class="org.mifos.framework.components.batchjobs.helpers.GenerateMeetingsForCustomerAndSavingsHelper" />

    <!--
                BranchReportTask:
    -->
    <bean name="BranchReportTask" parent="jobDetailBase" class="org.springframework.scheduling.quartz.JobDetailBean">
      <property name="jobClass" value="org.mifos.framework.components.batchjobs.helpers.BranchReportTask" />
      <property name="name" value="BranchReportTaskJob" />
    </bean>
    <bean id="BranchReportTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="BranchReportTask" />
        <property name="cronExpression" value="0 5 0 * * ?" />
    </bean>
    <batch:job id="BranchReportTaskJob" parent="jobBase" job-repository="jobRepository">
        <batch:step id="BranchReportTask-step-1">
            <batch:tasklet ref="BranchReportTaskTasklet" />
        </batch:step>
    </batch:job>
    <bean name="BranchReportTaskTasklet" class="org.mifos.framework.components.batchjobs.helpers.BranchReportHelper" />
    
    	<!--
                ETLReportDWTask:
    -->	
    <bean name="ETLReportDWTask" parent="jobDetailBase" class="org.springframework.scheduling.quartz.JobDetailBean">
      <property name="jobClass" value="org.mifos.framework.components.batchjobs.helpers.ETLReportDWTask" />
      <property name="name" value="ETLReportDWTaskJob" />
    </bean>
    <bean id="ETLReportDWTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="ETLReportDWTask" />
        <property name="cronExpression" value="0 0 0 * * ?" />
    </bean>
    <batch:job id="ETLReportDWTaskJob" parent="jobBase" job-repository="jobRepository">
        <batch:step id="ETLReportDWTask-step-1">
            <batch:tasklet ref="ETLReportDWTaskTasklet" />
        </batch:step>
    </batch:job>
    <bean name="ETLReportDWTaskTasklet" class="org.mifos.framework.components.batchjobs.helpers.ETLReportDWHelper" />
    

    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.instanceName">MifosQuartzScheduler</prop>
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
                <prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
                <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
                <prop key="org.quartz.threadPool.threadCount">1</prop>
                <prop key="org.quartz.jobStore.class">org.quartz.simpl.RAMJobStore</prop>
                <prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
            </props>
        </property>
        <property name="triggers">
            <list>
            <ref bean="ProductStatusTrigger" />
                <ref bean="SavingsIntPostingTaskTrigger" />
                <ref bean="ApplyCustomerFeeChangesTaskTrigger" />
                <ref bean="LoanArrearsAgingTaskTrigger" />
                <ref bean="ApplyHolidayChangesTaskTrigger" />
                <ref bean="LoanArrearsAndPortfolioAtRiskTaskTrigger" />
                <ref bean="GenerateMeetingsForCustomerAndSavingsTaskTrigger" />
                <ref bean="BranchReportTaskTrigger" />
                <ref bean="ETLReportDWTaskTrigger"/>
            </list>
        </property>
    </bean>

    <!--
        ========= Framework-specific configurations: =========
    -->

    <bean id="configurationLocator" class="org.mifos.framework.util.ConfigurationLocator"/>

    <bean id="customProperties" factory-bean="configurationLocator" factory-method="getCustomFilePath">
        <constructor-arg value="local.properties"/>
    </bean>

    <bean id="mainPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:org/mifos/config/resources/mainDatabase.properties</value>
                <value>classpath:org/mifos/config/resources/integrationDatabase.properties</value>
                <ref bean="customProperties"/>
            </list>
        </property>
    </bean>

    <batch:job-repository
       id="jobRepository"
       transaction-manager="transactionManager"
       data-source="integrationDataSource"
       table-prefix="BATCH_"
    />

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
       <property name="jobRepository" ref="jobRepository" />
       <property name="taskExecutor">
           <bean class="org.springframework.core.task.SyncTaskExecutor" />
       </property>
    </bean>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
       <property name="dataSource" ref="integrationDataSource" />
       <property name="tablePrefix" value="BATCH_" />
    </bean>

    <bean id="jobRegistryBeanPostProcessor" class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
        <property name="jobRegistry" ref="jobRegistry"/>
    </bean>

    <bean id="jobDetailBase" class="org.springframework.scheduling.quartz.JobDetailBean">
       <property name="jobDataAsMap">
        <map>
            <entry key="jobLocator" value-ref="jobRegistry" />
            <entry key="jobLauncher" value-ref="jobLauncher" />
            <entry key="jobExplorer" value-ref="jobExplorer" />
            <entry key="jobRepository" value-ref="jobRepository" />
        </map>
    </property>

    </bean>

    <batch:job id="jobBase" abstract="true">
        <batch:listeners>
            <batch:listener ref="jobListener"/>
        </batch:listeners>
    </batch:job>

    <bean id="jobListener" class="org.mifos.framework.components.batchjobs.BatchJobListener" />

</beans>
