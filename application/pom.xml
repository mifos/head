<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- TODO Could rename this module from mifos-webapp to mifos-application (in line with physical module folder name!),
         now that we have a mifos-war, and that this is actually not a 'webapp' (?!) anymore, for clarity? -->
    <artifactId>mifos-webapp</artifactId>
    <packaging>jar</packaging>
    <name>Mifos - Application</name>

    <parent>
        <groupId>org.mifos</groupId>
        <artifactId>mifos-parent</artifactId>
        <version>1.12-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <scm>
        <url>git://mifos.git.sourceforge.net/gitroot/mifos/head</url>
        <connection>scm:git:git://mifos.git.sourceforge.net/gitroot/mifos/</connection>
        <developerConnection>scm:git:ssh://mifos.git.sourceforge.net/gitroot/mifos/head</developerConnection>
    </scm>

    <properties>
        <modules.root.dir>${basedir}/..</modules.root.dir>
        <jdk.version>1.6</jdk.version>
        <current.release.name>mifos-v2.6.0-SNAPSHOT</current.release.name>
        <test.database.properties.file>${basedir}/src/test/resources/org/mifos/config/resources/integrationDatabase.properties</test.database.properties.file>
        <main.database.properties.file>${basedir}/src/main/resources/org/mifos/config/resources/mainDatabase.properties</main.database.properties.file>
        <create.props.skip>true</create.props.skip>
        <!-- mimics ConfigurationLocator directory search behavior -->
        <mifos.overrides.conf>${mifos.conf}/local.properties</mifos.overrides.conf>
        <mifos.overrides.env>${env.MIFOS_CONF}/local.properties</mifos.overrides.env>
        <mifos.overrides.home>${user.home}/.mifos/local.properties</mifos.overrides.home>
        <!--
            Don't search System.getProperty("conf.dir") for local.properties; no need. It is only used to override
            settings in acceptanceDatabase.properties.
        -->

    </properties>
    <profiles>
        <profile>
            <id>continuous-integration</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <create.props.skip>false</create.props.skip>
            </properties>
        </profile>
        <profile>
            <id>jacoco-coverage</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <surefire.jacoco.agent>-javaagent:${jacoco.agent.path}=destfile=${jacoco.file.path},includes=org.mifos.*,excludes=*_javassist_*</surefire.jacoco.agent>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-db</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-testFramework</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-domain-dto</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-accounting</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-serviceInterfaces</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-userInterface</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-questionnaire</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-cashflow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-abstract-domain</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-organization</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-appdomain</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-reporting</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mifos</groupId>
            <artifactId>mifos-rest</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>ognl</groupId>
            <artifactId>ognl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.webflow</groupId>
            <artifactId>spring-binding</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.webflow</groupId>
            <artifactId>spring-js</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.webflow</groupId>
            <artifactId>spring-webflow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-acl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-envers</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>freemarker</artifactId>
                    <groupId>freemarker</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-c3p0</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-digester</groupId>
            <artifactId>commons-digester</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache</groupId>
            <artifactId>jakarta-oro</artifactId>
            <version>20020329</version>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>struts</groupId>
            <artifactId>struts</artifactId>
        </dependency>
        <dependency>
            <groupId>struts</groupId>
            <artifactId>struts-el</artifactId>
        </dependency>
        <dependency>
            <groupId>struts</groupId>
            <artifactId>struts-legacy</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.batch</groupId>
            <artifactId>spring-batch-core</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymockclassextension</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>strutstest</groupId>
            <artifactId>strutstest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit-addons</groupId>
            <artifactId>junit-addons</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/test-classes/WEB-INF</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/webapp/WEB-INF</directory>
                                    <includes>
                                        <include>*.xml</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-main-resources-binarysafe</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <!-- these must be filtered by native2ascii, don't just copy them -->
                                    <excludes>
                                        <exclude>**/localizedResources/*.properties</exclude>
                                    </excludes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <nonFilteredFileExtensions>
                                <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                            </nonFilteredFileExtensions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <debug>true</debug>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
                <version>0.9</version>
                <configuration>
                    <!-- Whether show JS warnings -->
                    <jswarn>false</jswarn>
                    <!-- Whether to add suffix to compressed files -->
                    <nosuffix>true</nosuffix>
                    <!-- Whether to obfuscate compressed files -->
                    <nomunge>true</nomunge>
                    <statistics>false</statistics>
                    <!-- Files to exclude -->
                    <excludes>
                        <exclude>**/**.min.js</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-1</version>
                <executions>
                    <execution>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <quiet>true</quiet>
                            <files>
                                <file>${main.database.properties.file}</file>
                                <file>${test.database.properties.file}</file>
                                <file>${mifos.overrides.conf}</file>
                                <file>${mifos.overrides.env}</file>
                                <file>${mifos.overrides.home}</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <testNGArtifactName>null</testNGArtifactName>
                            <printSummary>true</printSummary>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <argLine>${surefire.jacoco.agent}</argLine>
                            <runOrder>alphabetical</runOrder>
                            <reportsDirectory>${project.build.directory}/surefire-reports/unit</reportsDirectory>
                            <includes>
                                <include>**/*Test.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/*IntegrationTest.java</exclude>
                                <exclude>**/*StrutsTest.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <testNGArtifactName>null</testNGArtifactName>
                            <printSummary>true</printSummary>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <argLine>${maven.surefire.memory}</argLine>
                            <systemProperties>
                                <mifos.mode>integration</mifos.mode>
                            </systemProperties>
                            <reportsDirectory>${project.build.directory}/surefire-reports/integration/no_db_commits</reportsDirectory>
                            <includes>
                                <include>**/*IntegrationTest.java</include>
                                <include>**/*StrutsTest.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.4.3</version>
                <configuration>
                    <linkXRef>false</linkXRef>
                    <outputDirectory>${project.build.directory}/surefire-reports</outputDirectory>
                    <reportsDirectories>
                        <reportsDirectories>${project.build.directory}/surefire-reports/unit</reportsDirectories>
                        <reportsDirectories>${project.build.directory}/surefire-reports/integration/no_db_commits</reportsDirectories>
                        <reportsDirectories>${project.build.directory}/surefire-reports/integration/dataupgrade</reportsDirectories>
                    </reportsDirectories>
                </configuration>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>report-only</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!--            
            <plugin>
                <groupId>org.codehaus.mojo.jspc</groupId>
                <artifactId>jspc-maven-plugin</artifactId>
                <version>2.0-alpha-3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.mojo.jspc</groupId>
                        <artifactId>jspc-compiler-tomcat6</artifactId>
                        <version>2.0-alpha-3</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <includeInProject>false</includeInProject>
                    < ! - -
                        we'll still catch noncompliance with taglibs even if this is false, and if it is true, the
                        compiled JSPs are included in the project (even if includeInProject=false!)
                    - - >
                    <compile>false</compile>
                    < ! - - makes output cleaner (less verbose) - - >
                    <showSuccess>false</showSuccess>
                    <sources>
                        <directory>${basedir}/src/main/resources/META-INF/resources</directory>
                        <includes>
                            <include>**/*.jsp</include>
                        </includes>
                    </sources>
                </configuration>
            </plugin>
 -->
            <plugin>
                <groupId>org.mifos.maven</groupId>
                <artifactId>mifos-pseudoloc-gen</artifactId>
                <version>1.0</version>
                <configuration>
                    <inputDirectory>src/main/resources/org/mifos/config/localizedResources</inputDirectory>
                    <outputDirectory>target/classes/org/mifos/config/localizedResources</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>pseudolocalize</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
            <plugin>
                <groupId>org.mifos.maven</groupId>
                <artifactId>mifos-settings-sanitizer</artifactId>
                <version>0.0.1</version>
                <executions>
                    <execution>
                        <id>create_sanitized_application_settings_file</id>
                        <phase>package</phase>
                        <goals>
                            <goal>sanitize</goal>
                        </goals>
                        <configuration>
                            <inputFile>src/main/resources/org/mifos/config/resources/applicationConfiguration.default.properties</inputFile>
                            <outputFile>target/applicationConfiguration.custom.properties</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->
            <plugin>
                <groupId>org.codehaus.groovy.maven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <!-- Fetch build version information, store for use in Mifos -->
                            <source>
                                def env = System.getenv()
                                def gitcmd = "git"
                                if (env['OS'] =~ /^Windows/)
                                    gitcmd = "cmd /c ${gitcmd}"
                                def gitShaProc = """${gitcmd} log --pretty=format:%H -n1""".execute()
                                gitShaProc.waitFor()
                                project.properties['this.commit.id'] = gitShaProc.in.text
                                project.properties['ci.build.tag'] = env['BUILD_TAG'] ?: 'DEVELOPMENT'
                                project.properties['ci.build.date'] = "" + new Date()
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- this goes away once we're completely off Struts -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native2ascii-maven-plugin</artifactId>
                <version>1.0-alpha-1</version>
                <executions>
                    <execution>
                        <id>native2ascii</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>native2ascii</goal>
                        </goals>
                        <configuration>
                            <encoding>UTF8</encoding>
                            <src>src/main/resources/org/mifos/config/localizedResources</src>
                            <dest>target/classes/org/mifos/config/localizedResources</dest>
                            <includes>*.properties</includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
        	<plugins>
        		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        		<plugin>
        			<groupId>org.eclipse.m2e</groupId>
        			<artifactId>lifecycle-mapping</artifactId>
        			<version>1.0.0</version>
        			<configuration>
        				<lifecycleMappingMetadata>
        					<pluginExecutions>
        					</pluginExecutions>
        				</lifecycleMappingMetadata>
        			</configuration>
        		</plugin>
        	</plugins>
        </pluginManagement>
    </build>
</project>
